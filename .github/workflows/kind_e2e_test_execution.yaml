name: Execute e2e tests
on:
  workflow_call:
    inputs:
      e2e_test:
        required: true
        type: string
      makefile_setup_target:
        required: true
        type: string
      image:
        required: true
        type: string
jobs:
  kind_e2e_tests:
    runs-on: ubuntu-latest
    name: ${{ inputs.e2e_test }}
    env:
      GOPATH: /home/runner/go
      GOROOT: /usr/local/go1.16
      CGO_ENABLED: 0
    steps:
      - name: Free diskspace by removing unused packages
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/checkout@v2
        if: github.event_name != 'pull_request'
      - name: Set up Go 1.16
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - name: Install kustomize
        run: make kustomize
      - name: Install Kind
        run: go get sigs.k8s.io/kind
      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.11.2/yq_linux_amd64.tar.gz
          tar -xzf yq_linux_amd64.tar.gz
          sudo mv yq_linux_amd64.tar.gz /usr/bin
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download k8ssandra-operator image
        uses: actions/download-artifact@v2
        with:
          name: k8ssandra-operator
          path: /tmp
      - name: Load images
        run: |
          docker load --input /tmp/k8ssandra-operator.tar
      - name: Setup kind cluster
        run: make IMG=${{ inputs.image }} ${{ inputs.makefile_setup_target }}
      - name: Run e2e test ( ${{ inputs.e2e_test }} )
        run: make E2E_TEST=TestOperator/${{ inputs.e2e_test }} NODETOOL_STATUS_TIMEOUT=2m e2e-test
      - name: Archive k8s logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: k8s-logs-${{ matrix.e2e_test }}
          path: ./build/test